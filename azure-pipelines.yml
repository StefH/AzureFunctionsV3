pool:
  vmImage: 'ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  buildProjectFunctions: '**/FunctionsAppV3.csproj'
  deployToAzure: $(DEPLOY_TO_AZURE)
  tag: '1.0.0'
  buildNumber: $(Build.BuildNumber)

stages:
- stage: build_and_publish
  displayName: 'Stage 1'
  jobs: 
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: build
        projects: |
          $(buildProjectFunctions)
        arguments: '--configuration $(BuildConfiguration) /p:Version=1.0.0-$(buildNumber)'

  - job: publish
    displayName: 'Publish to Azure'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) # Do not run for PullRequests
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Publish to Azure'
      inputs:
        command: publish
        projects: |
         $(buildProjectFunctions)
        publishWebProjects: false
        arguments: '--configuration $(BuildConfiguration) /p:Version=1.0.0-$(BuildNumber) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
        # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/dotnet-core-cli?view=azure-devops#file-structure-for-output-files-is-different-from-previous-builds
        modifyOutputPath: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) # Do not run for PullRequests

- stage: deploy
  displayName: "Stage 2"
  condition: and(succeeded('build_and_publish'), eq(deployToAzure, 'yes'), ne(variables['Build.Reason'], 'PullRequest')) # Do not run for PullRequests
  jobs:
  - job: Deploy
    displayName: 'Start/Stop and (re)Deploy to Azure'
    steps:
    - task: AzureAppServiceManage@0
      displayName: Stop
      inputs:
        azureSubscription: 'Service Connection Azure Functions V3'
        Action: 'Stop Azure App Service'
        WebAppName: 'stef-function-app-linux-v3'
    
    - task: AzureRmWebAppDeployment@4
      displayName: Deploy
      inputs:
        azureSubscription: 'Service Connection Azure Functions V3'
        appType: functionAppLinux
        WebAppName: 'stef-function-app-linux-v3'
        packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'
        RuntimeStackFunction: 'DOCKER|microsoft/azure-functions-dotnet-core2.0:2.0'  

    - task: AzureAppServiceManage@0
      displayName: Start
      inputs:
        azureSubscription: 'Service Connection Azure Functions V3'
        Action: 'Start Azure App Service'
        WebAppName: 'stef-function-app-linux-v3'